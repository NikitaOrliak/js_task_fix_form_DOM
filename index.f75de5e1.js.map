{"mappings":"AAAA;AAEA,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,OAAO,OAAO,CAAC,CAAA;IACb,MAAM,iBAAiB,eAAe,MAAM,IAAI;IAEhD,MAAM,WAAW,GAAG;IAEpB,MAAM,kBAAkB,CAAC,eACvB,CAAC;sCACiC,EAAE,MAAM,EAAE,CAAC;QACzC,EAAE,eAAe;;IAErB,CAAC;AAEL;AAEA,SAAS,eAAe,IAAI;IAC1B,MAAM,kBAAkB,KAAK,KAAK,CAAC,aAAa;IAEhD,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC,WAAW,KAAK,KAAK,KAAK,CAAC;IAEjD,IAAI,iBAAiB;QACnB,MAAM,QAAQ,KAAK,OAAO,CAAC;QAE3B,UAAU,QAAQ,KAAK,CAAC,GAAG,SAAS,MAAM,QAAQ,KAAK,CAAC;IAC1D;IAEA,OAAO;AACT","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\ninputs.forEach(input => {\n  const normalizedName = normilizedText(input.name);\n\n  input.placeholder = normalizedName;\n\n  input.insertAdjacentHTML('beforebegin',\n    `\n      <label class=\"field-label\" for=\"${input.id}\">\n        ${normalizedName}\n      </label>\n    `,\n  );\n});\n\nfunction normilizedText(text) {\n  const upperCaseLetter = text.match(/[A-Z]/g) || null;\n\n  let newText = text[0].toUpperCase() + text.slice(1);\n\n  if (upperCaseLetter) {\n    const index = text.indexOf(upperCaseLetter);\n\n    newText = newText.slice(0, index) + ' ' + newText.slice(index);\n  }\n\n  return newText;\n};\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}